#!/bin/bash
# deploy-infrastructure.sh - Script pour d√©ployer l'infrastructure et l'application

set -e  # Arr√™t du script en cas d'erreur

echo "üöÄ D√©marrage du d√©ploiement de l'infrastructure et de l'application..."

# √âtape 1: Provisionner l'infrastructure avec Terraform
echo "1Ô∏è‚É£ Provisionnement de l'infrastructure avec Terraform..."
cd infra
terraform init
terraform validate
terraform plan
terraform apply -auto-approve
cd ..

# √âtape 2: Attendre que l'instance soit pr√™te
echo "2Ô∏è‚É£ Attente de 30 secondes pour permettre √† l'instance de d√©marrer..."
sleep 30

# √âtape 3: D√©ployer l'application avec Ansible
echo "3Ô∏è‚É£ D√©ploiement de l'application avec Ansible..."
export ANSIBLE_HOST_KEY_CHECKING=False
ansible-playbook -i ./ansible/inventory.ini ./ansible/deploy.yml

# √âtape 4: Afficher les informations de connexion
echo "4Ô∏è‚É£ R√©cup√©ration des informations de l'instance..."
cd infra
INSTANCE_IP=$(terraform output -raw instance_public_ip)
SSH_COMMAND=$(terraform output -raw ssh_command)
cd ..

echo "‚úÖ D√©ploiement termin√© avec succ√®s !"
echo ""
echo "üìå Informations de l'instance :"
echo "   - Adresse IP : ${INSTANCE_IP}"
echo "   - API URL    : http://${INSTANCE_IP}:3000"
echo "   - SSH        : ${SSH_COMMAND}"
echo ""
echo "Pour vous connecter √† l'instance via SSH :"
echo "   ${SSH_COMMAND}"
echo ""
echo "Pour tester l'API :"
echo "   curl http://${INSTANCE_IP}:3000"
